name: Deploy to Lambda

on:
  workflow_run:
    workflows: ["Push to ECR"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'ECR image tag to deploy (e.g., v1.0.0, latest)'
        required: false
        default: 'latest'

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: hono-lambda-poc
  LAMBDA_FUNCTION_NAME: hono-lambda-poc

jobs:
  deploy:
    name: Deploy to AWS Lambda
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get image URI
        id: image
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TAG="${{ github.event.inputs.image_tag }}"
          else
            TAG="latest"
          fi

          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          IMAGE_URI="${ECR_REGISTRY}/${{ env.ECR_REPOSITORY }}:${TAG}"

          echo "uri=${IMAGE_URI}" >> $GITHUB_OUTPUT
          echo "Deploying image: ${IMAGE_URI}"

      - name: Update Lambda function
        run: |
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --image-uri ${{ steps.image.outputs.uri }}

      - name: Wait for Lambda update to complete
        run: |
          aws lambda wait function-updated \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }}
